# Nome do workflow que aparecerá na aba "Actions" do seu repositório
name: CI/CD Fullstack

# Define quando o workflow será executado
on:
  push:
    branches: [ atualizacoes ]
  pull_request:
    branches: [ atualizacoes ]

# Define um único 'job' para o build
jobs:
  build:
    # O ambiente onde o job irá rodar.
    runs-on: ubuntu-latest

    # Os passos que o job irá seguir
    steps:
      - name: 'Clonar o repositório'
        # Esta ação faz o checkout do seu código
        uses: actions/checkout@v4

      # --- BACKEND ---
      - name: 'Configurar o JDK 21'
        # Configura o ambiente Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: 'Build e Teste do Backend'
        # Compila e executa os testes do projeto Maven
        working-directory: ./backend
        run: mvn clean verify -B

      - name: 'Salvar o arquivo JAR como artefato'
        # Salva o arquivo JAR para ser usado em futuros deploys
        uses: actions/upload-artifact@v4
        with:
          name: enem-backend-jar
          path: ./enem_app/backend/target/*.jar

      # --- FRONTEND ---
      - name: 'Configurar o Node.js 20'
        # Configura o ambiente Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 'Instalar dependências do Frontend'
        # Navega para o diretório do frontend e instala as dependências
        working-directory: ./enem_app/frontend
        run: npm install

      - name: 'Testar o Frontend'
        # Executa os testes do frontend
        working-directory: ./enem_app/frontend
        run: npm test -- --watchAll=false

      - name: 'Build do Frontend'
        # Cria a versão de produção do frontend
        working-directory: ./enem_app/frontend
        run: npm run build

      - name: 'Salvar o build do Frontend como artefato'
        # Salva a pasta 'build' ou 'dist' para ser usada em futuros deploys
        uses: actions/upload-artifact@v4
        with:
          name: enem-frontend-build
          path: ./enem_app/frontend/build # Ou use 'dist' se for o caso

      # --- TESTES DE INTEGRAÇÃO COM DOCKER COMPOSE ---
      - name: 'Rodar testes de integração com Docker Compose'
        # Este passo é o único responsável por subir os serviços necessários para os testes
        run: |
          # Sobe os contêineres definidos no docker-compose.yml em modo detached
          docker-compose up -d
          
          # Aguarde alguns segundos para os serviços estarem prontos
          echo "Esperando 15 segundos para os serviços subirem..."
          sleep 15
          
          # Aqui você rodaria os comandos de teste de integração
          echo "Rodando testes de integração..."
          # Substitua esta linha pelo comando que executa os testes de integração do seu backend
          # Ex:
          # working-directory: ./backend
          # mvn test -P integration-test
          
          # Por fim, derruba os serviços para liberar recursos do runner do GitHub Actions
          docker-compose down
